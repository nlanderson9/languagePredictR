% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/word_network.R
\name{word_network}
\alias{word_network}
\title{Plot Word Network}
\usage{
word_network(
  input,
  model = NULL,
  topX = 100,
  graphIndividual = TRUE,
  graphCombined = FALSE,
  directed = FALSE,
  removeVerticesBelowDegree = 2,
  cluster = FALSE,
  edgeColor = "darkgray",
  edgeAlpha = 0.5,
  edgeCurve = 0.15,
  modelNodeColors = c("lightblue", "orange"),
  modelNodeSizeRange = c(5, 10),
  nodeLabelSize = 1,
  nodeLabelColor = "black",
  plotTitle = NULL
)
}
\arguments{
\item{input}{An input dataframe, typically the output from the \code{node_edge} function}

\item{model}{Optional - if \code{node_edge} used a model as input, the same model can be provided here for extra functionality}

\item{topX}{The number of word pairs to include in the graphed network. Chosen word pairs are selected from those with the greatest number of co-occurrences. Defaults to 100.}

\item{graphIndividual}{If TRUE, individual graphs are produced for both outcomes of the model. Default is TRUE.}

\item{graphCombined}{If TRUE, a network is graphed based on the entire language corpus. Default is FALSE.}

\item{directed}{Determines if the network is directed (direction of edges matters) or not. Defaults to FALSE (the output from \code{node_edge} does not yield directional edge information, so only change this if using your own dataframe).}

\item{removeVerticesBelowDegree}{An integer which determines the minimum number of edges a node must have to be included. Default is 2.}

\item{cluster}{If TRUE, a clustering algorithm is applied to the network, and edges are recolored according to their cluster membership. Default is FALSE.}

\item{edgeColor}{The color of the edges. Default is "darkgray".}

\item{edgeAlpha}{The alpha of the edges. Default is 0.5.}

\item{edgeCurve}{If greater than 0, edges will be curved with a radius corresponding to the value. Default is 0.15. A value of 0 yields straight edges.}

\item{modelNodeColors}{The color shading for nodes that are predictive words in the provided model. Must be a vector of two values. Defaults to c("lightblue", "orange").}

\item{modelNodeSizeRange}{The sizing for nodes that are predictive words in the provided model. Must be a vector of two values (the minimum plotted size and maximum plotted size). Defaults to c(5, 10).}

\item{nodeLabelSize}{The size of the text for node labels. Defaults to 1.}

\item{nodeLabelColor}{The color of the node labels. Defaults to "black".}

\item{plotTitle}{The title of the plot(s). If a model is used, it must be a vector of three strings. If not, it must be a single string.}
}
\value{
Nothing; a word_network is plotted
}
\description{
Plots a word network of adjacent words.
}
\examples{
\dontrun{
movie_review_data1$cleanText = clean_text(movie_review_data1$text)

# Using language to predict "Positive" vs. "Negative" reviews
movie_model_valence = language_model(movie_review_data1,
                                     outcomeVariableColumnName = "valence",
                                     outcomeVariableType = "binary",
                                     textColumnName = "cleanText")

node_edge_table = node_edge(movie_model_valence)
word_network(node_edge_table)
}
}
