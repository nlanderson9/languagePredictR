% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_language_model.R
\name{test_language_model}
\alias{test_language_model}
\title{Test Language Model}
\usage{
test_language_model(
  inputDataframe,
  outcomeVariableColumnName,
  textColumnName,
  trainedModel,
  ngrams = "1",
  dfmWeightScheme = "count",
  lambda = "lambda.min"
)
}
\arguments{
\item{inputDataframe}{A dataframe containing a column with text data (character strings) and an outcome variable (numeric or two-level factor)}

\item{outcomeVariableColumnName}{A string consisting of the column name for the outcome variable in \code{inputDataframe}}

\item{textColumnName}{A string consisting of the column name for the text data in \code{inputDataframe}}

\item{trainedModel}{A trained model created by the \code{\link{language_model}} function}

\item{ngrams}{A string defining the ngrams to serve as predictors in the model. Defaults to "1". For more information, see the \code{okens_ngrams} function in the \code{quanteda} package}

\item{dfmWeightScheme}{A string defining the weight scheme you wish to use for constructing a document-frequency matrix. Default is "count". For more information, see the \code{dfm_weight} function in the \code{quanteda} package}

\item{lambda}{A string defining the lambda value to be used. Default is "lambda.min". For more information, see the \code{cv.glmnet} function in the \code{glmnet} package}
}
\value{
An object of the type "testAssessment"
}
\description{
This function tests a model created by the \code{\link{language_model}} function on a new dataset
}
\details{
This function is effectively a special instance of the \code{\link{assess_models}} function. Instead of being provided with two independently-specified models, the two assessed models are the training model and the testing model.
This allows for assessing how well a trained language model generalizes to other inputs - this function allows for comparisons between the models using many of the same functions that can be used with \code{\link{assess_models}}.
}
\examples{

\dontrun{
movie_review_data1$cleanText = clean_text(movie_review_data1$text)
movie_review_data2$cleanText = clean_text(movie_review_data2$text)

# Train a model on the \code{movie_review_data1} dataset
# Using language to predict "Positive" vs. "Negative" reviews
movie_model_valence = language_model(movie_review_data1,
                                     outcomeVariableColumnName = "valence",
                                     outcomeVariableType = "binary",
                                     textColumnName = "cleanText")

# Test the model on the \code{movie_review_data2} dataset
movie_model_rating = test_language_model(movie_review_data2,
                                    outcomeVariableColumnName = "valence",
                                    textColumnName = "cleanText",
                                    trainedModel = movie_model_valence)
}

}
\seealso{
\code{\link{language_model}} and \code{\link{assess_models}}
}
