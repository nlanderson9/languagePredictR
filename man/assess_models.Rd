% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assess_models.R
\name{assess_models}
\alias{assess_models}
\title{Create Model Assessment}
\usage{
assess_models(...)
}
\arguments{
\item{...}{Models generated by the \code{\link{language_model}} function, and/or two-column dataframes with a predictor variable and an outcome variable}
}
\value{
An object of the type "modelAssessment"
}
\description{
This function is deprecated; all dependent functions (e.g. \code{plot_roc()} or \code{plot_predictor_words}) now take individual models as arguments. This function assesses one or more models created by the \code{\link{language_model}} function.
}
\details{
The primary purpose of this function is to be used with other functions included in this package, such as plot_roc() or predictor_word_plots()
All necessary calculations are performed by this function, so output plots and analyses can be performed quickly and modified as needed
This function can be used to assess models generated by the \code{\link{language_model}}, as well as simple predictors that could be compared with language models.
}
\examples{

\dontrun{
strong_movie_review_data$cleanText = clean_text(strong_movie_review_data$text)
mild_movie_review_data$cleanText = clean_text(mild_movie_review_data$text)

# Using language to predict "Positive" vs. "Negative" reviews
# Only for strong reviews (ratings of 1 or 10)
movie_model_strong = language_model(strong_movie_review_data,
                                     outcomeVariableColumnName = "valence",
                                     outcomeVariableType = "binary",
                                     textColumnName = "cleanText")

# Using language to predict "Positive" vs. "Negative" reviews
# Only for mild reviews (ratings of 4 or 7)
movie_model_mild = language_model(mild_movie_review_data,
                                     outcomeVariableColumnName = "valence",
                                     outcomeVariableType = "binary",
                                     textColumnName = "cleanText")

# Create the model assessment
# movie_assessment = assess_models(movie_model_strong, movie_model_mild)
}

}
